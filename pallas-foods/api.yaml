swagger: "2.0"
info:
  description: "Pallas Foods Swagger REST API"
  version: "1.0.0"
  title: "Pallas Foods Swagger REST API"
  termsOfService: "terms of service"
  contact:
    email: "company.admin@pallasfoods.com"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "swagger.monsoon-sites.com"
basePath: "/rest/v1"
tags:
- name: "store"
  description: "Rest API for getting prices, stock order actions"

schemes:
- "https"
- "http"
paths:
  /store/price:
    get:
      tags:
      - "store"
      summary: "Get Company based prices"
      description: "Company based price web service to be utilised within Ecommerce pages that contain Products (catalogue, cart, checkout and cms pages with product widgets)."
      operationId: "storePrice"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
      - name: "sku"
        in: "query"
        description: "SKU to filter by"
        required: true
        type: "array"
        items:
          type: "string"
      - name: "customer_identifier"
        in: "query"
        description: "Customer AX ID"
        required: true
        type: "string"
      responses:
        200:
          description: "Success Response"
          schema:
            $ref: "#/definitions/Price"
        400:
          description: "Error Response"
          schema:
            $ref: "#/definitions/CommonError"
  /store/inventory:
    get:
      tags:
      - "store"
      summary: "Get amount of a hand stock per product"
      description: "This API is to return the amount of on hand stock per product based on the location, delivery date and website."
      operationId: "storeInventory"
      produces:
      - "application/json"
      parameters:
      - name: "sku"
        in: "query"
        description: "SKU to filter by"
        required: true
        type: "array"
        items:
            type: "string"
      - name: "location_code"
        in: "query"
        description: "Location Code"
        required: true
        type: "string"
      - name: "shipment_date"
        in: "query"
        description: "Shipment Date"
        required: true
        type: "string"
      - name: "customer_identifier"
        in: "query"
        description: "Customer AX ID"
        required: true
        type: "string"
      - name: "type"
        in: "query"
        description: "Type Available values: B2B"
        required: true
        type: "string"
        enum:
          - "B2B"
      responses:
        200:
          description: "successful operation"
          schema:
              $ref: "#/definitions/Inventory"
        400:
          description: "Invalid status value"
          schema:
            $ref: "#/definitions/CommonError"
  /store/order/minimum_amount:
    get:
      tags:
      - "store"
      summary: "Minimum order amount"
      description: "This API is to check the minimum order amount a customer has to reach in order to be able to place an order based on the Delivery Date."
      operationId: "storeOrderMinimumAmount"
      produces:
      - "application/json"
      parameters:
      - name: "delivery_date"
        in: "query"
        description: "Delivery Date"
        required: true
        type: "array"
        items:
            type: "string"
      - name: "customer_identifier"
        in: "query"
        description: "Customer AX ID"
        required: true
        type: "string"
      responses:
        200:
          description: "successful operation"
          schema:
            $ref: "#/definitions/MinimumAmount"
        400:
          description: "Invalid tag value"
          schema:
            $ref: "#/definitions/ErrorMinimumOrderAmount"
  /store/order:
    post:
      tags:
      - "store"
      summary: "Order Simulation/Export"
      description: "Web service to be utilized after the order placement. In case of issues with the order export, the order will be saved in Magento with the status 'Export failed' and a comment to the order history will be added with the details of the error: the order will be queued and subsequent attempts will be executed, until the maximum number of attempts is reached, after which, a Pallas Foods member will have to manually intervene. "
      operationId: "storeOrder"
      consumes:
      - "application/json"
      produces:
      - "application/json"
      parameters:
        - in: "body"
          name: "body"
          description: "Order simulation/export"
          required: true
          schema:
            $ref: "#/definitions/OrderSimulation"
      responses:
        200:
          description: "successful order export"
          schema:
            $ref: "#/definitions/OrderExport"
        202:
          description: "successful order simulation"
          schema:
            $ref: "#/definitions/OrderSimulationResponse"
        400:
          description: "Invalid ID supplied"
          schema:
            $ref: "#/definitions/OrderSimulationError"
        406:
          description: ""
          schema:
            allOf:
              - $ref: "#/definitions/OrderSimulationRejected"
definitions:
  Price:
    type: "object"
    properties:
      items:
        type: "array"
        items:
            $ref: "#/definitions/PriceItems"
      totalCount:
        type: "number"
        example: 1
    xml:
      name: "Price"
  PriceItems:
    type: "object"
    properties:
      sku:
        type: "string"
        example: "sku1"
      currentPriceCase:
        type: "number"
        format: "float"
        example: "98.00"
      currentPriceUnit:
        type: "number"
        format: "float"
        example: "10.00"
      comparisonPriceCase:
        type: "number"
        format: "float"
        example: "102.00"
      comparisonPriceUnit:
        type: "number"
        format: "float"
        example: "11.00"
    xml:
      name: "PriceItems"
  Inventory:
    type: "object"
    properties:
      items:
        type: "array"
        items:
          $ref: "#/definitions/InventoryItems"
      totalCount:
        type: "number"
        example: 1
    xml:
      name: "Inventory"
  InventoryItems:
    type: "object"
    properties:
      sku:
        type: "string"
        example: "sku1"
      qty:
        type: "number"
        example: 3
    xml:
      name: "InventoryItems"
  MinimumAmount:
    type: "object"
    properties:
      total_order_value:
        type: "number"
        format: "float"
        example: "300.00"
    xml:
      name: "MinimumAmount"
  OrderSimulation:
    type: "object"
    required:
      - "webOrderType"
      - "navCustomerB2B"
      - "creationTime"
      - "deliveryDate"
      - "customerReference"
      - "orderValue"
      - "taxValue"
      - "orderDiscountValue"
      - "currency"
      - "customerAccountNumber"
      - "routeCode"
      - "routePosition"
      - "emailAddress"
    properties:
      magentoOrderNumber:
        type: "string"
        description: "Magento Order Reference Number. If the field is empty - this will be an order simulation call returning validation results If the field is not empty - this will be an order creation call"
      webOrderType:
        type: "string"
        description: "Web Order Type"
        enum:
          - "B2B"
          - "CCOLLECT"
      navCustomerB2B:
        type: "string"
        description: "Customer B2B Identifier"
      creationDate:
        type: "string"
        description: "Order creation date in format YYYY-MM-DD"
      deliveryDate:
        type: "string"
        description: "Order delivery date in format YYYY-MM-DD"
      customerReference:
        type: "string"
        description: "Purchase Order Number"
      orderValue:
        type: "number"
        format: "float"
        description: "Order Total"
      taxValue:
        type: "number"
        format: "float"
        description: "Tax amount"
      orderDiscountValue:
        type: "number"
        format: "float"
        description: "Order Discount Amount"
      currency:
        type: "string"
        description: "Order Currency"
        enum:
          - "EUR"
          - "GBR"
      customerAccountNumber:
        type: "string"
        description: "Customer AX ID note: Field duplicates value from navCustomerB2B - to be verified with PallasFoods if we need to send both fields"
      routeCode:
        type: "string"
        description: "ROute Code"
      routePosition:
        type: "string"
        description: "Number of booking time slots"
      buyerName:
        type: "string"
        description: "Customer Full Name"
      contactFirstName:
        type: "string"
        description: "Customer First Name"
      contactSecondName:
        type: "string"
        description: "Customer Last Name"
      contactTelephoneName:
        type: "string"
        description: "Customer Phone Number"
      emailAddress:
        type: "string"
        description: "Customer Email address"
      addressLine1:
        type: "string"
        description: "Street Address 1"
      addressLine2:
        type: "string"
        description: "Street Address 2"
      addressCity:
        type: "string"
        description: "Address City"
      addressCounty:
        type: "string"
        description: "Address Region"
      addressCounrty:
        type: "string"
        description: "Address Country"
      addressPostCode:
        type: "string"
        description: "Address Postal code"
      items:
        type: "array"
        items:
          allOf: 
          - $ref: "#/definitions/OrderSimulationItemsAccepted"
    xml:
      name: "Order simulation"
  OrderSimulationResponse:
    type: "object"
    properties:
      deliveryDate:
        type: "string"
        example: "2019-12-24"
        description: "Order delivery date in format YYYY-MM-DD"
      orderStatus:
        type: "string"
        example: "ACCEPTED"
      reasonCode:
        type: "string"
        example: "200"
      customerAccountNumber:
        type: "string"
        example: "AX1234"
      items:
        type: "array"
        items:
          allOf: 
          - $ref: "#/definitions/OrderSimulationItemsAccepted"
    xml:
      name: "Order simulation"
  OrderSimulationRejected:
    type: "object"
    properties:
      deliveryDate:
        type: "string"
        example: "2019-12-24"
        description: "Order delivery date in format YYYY-MM-DD"
      orderStatus:
        type: "string"
        example: "LINE_REJECTED"
      reasonCode:
        type: "string"
        example: "The order has been rejected"
      customerAccountNumber:
        type: "string"
        example: "AX1234"
      items:
        type: "array"
        items:
          $ref: "#/definitions/OrderSimulationItemsRejected"
  OrderSimulationItemsAccepted:
    allOf:
      - $ref: '#/definitions/OrderSimulationItems'
    properties:
      orderItemStatus:
        type: "string"
        example: "ACCEPTED"
      reasonCode:
        type: "string"
        example: "200"
    xml:
      name: "Order simulation items"
  OrderSimulationItemsRejected:
    allOf:
      - $ref: '#/definitions/OrderSimulationItems'
    properties:
      orderItemStatus:
        type: "string"
        example: "PRICE_CHECK_FAILURE"
      reasonCode:
        type: "string"
        example: "Price check failure"
    xml:
      name: "Order simulation items"
  OrderSimulationItems:
    type: "object"
    required:
      - "lineNumber"
      - "productCode"
      - "originalProductCode"
      - "orderQuantity"
      - "productDescription"
      - "itemPrice"
      - "lineAmount"
      - "tax"
      - "unitOfMeasure"
    properties:
      lineNumber:
        type: "string"
        description: "Internal Magento Item ID "
      productCode:
        type: "string"
        description: "Product SKU"
      originalProductCode:
        type: "string"
        description: "Product SKU note: to be verified with PallasFoods, currently the field duplicates productCode"
      orderQuantity:
        type: "number"
        description: "QTY of the order line"
      productDescription:
        type: "string"
        description: "Product Name"
      itemPrice:
        type: "number"
        format: "float"
        description: "Product Price"
      lineAmount:
        type: "number"
        format: "float"
        description: "Total Order Line amount"
      tax:
        type: "number"
        format: "float"
        description: "Total Order Line Tax Amount"
      unitOfMeasure:
        type: "string"
        description: "Order Line UOM"
      promotionId:
        type: "string"
        description: "Promotion Code note: to be verified with PallasFoods. Current implementation sends only “FREE“ code if the product price is 0"
      promotionType:
        type: "string"
        description: "note: to be verified with PallasFoods. Current implementation sends empty string"
    xml:
      name: "Order simulation items"
  OrderSimulationError:
    type: "object"
    properties:
      error:
        type: "boolean"
        example: "true"
      message:
        type: "string"
        example: "Required fields: 'orderValue, taxValue' are missing"
    xml:
      name: "Order simulation error"
  OrderExport:
    type: "object"
    properties:
      magentoOrderNumber:
        type: "string"
        example: "9000001234"
      supplierOrderNumber:
        type: "string"
        example: "12345"
      deliveryDate:
        type: "string"
        example: "2019-12-24"
        description: "Order delivery date in format YYYY-MM-DD"
      orderStatus:
        type: "string"
        example: "ACCEPTED"
      reasonCode:
        type: "string"
        example: "200"
      customerAccountNumber:
        type: "string"
        example: "AX1234"
      items:
        type: "array"
        items:
          allOf: 
          - $ref: "#/definitions/OrderSimulationItemsAccepted"
    xml:
      name: "Order simulation"
  CommonError:
    type: "object"
    properties:
      error:
        type: "boolean"
        example: "true"
      message:
        type: "string"
        example: "Invalid SKUs provided"
    xml:
      name: "Common Error"
  ErrorMinimumOrderAmount:
    type: "object"
    properties:
      error:
        type: "boolean"
        example: "true"
      message:
        type: "string"
        example: "Invalid Delivery Date selected"
    xml:
      name: "Error minimum order amount"
